name: Saga SDK Java CI

on:
  push:
    branches:
      - develop
      - master
    paths-ignore:
      - "**/README.md"
      - "doc/**"
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.BUILDBOT_PERSONAL_TOKEN }}
        submodules: recursive
    - name: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
    - name: GCloud Init
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: mythical-games

    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Get branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
      id: get_branch_name

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Authenticate GCP
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: GCloud Init
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: mythical-games

    - name: Run unit tests and generate code coverage
      if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
      run: |
        ./gradlew -i :saga-sdk-java:test :saga-sdk-java:jacocoTestRepo

    - name: Build with Gradle
      run: |
        ./gradlew build -x test

    - name: Release major version
      if: (github.ref == 'refs/heads/develop' && contains(github.event.head_commit.message, '[MAJOR]'))
      run: |
        # Fetch a full copy of the repo, as required by release plugin:
        git fetch --tags --unshallow
          ./gradlew release \
          -Prelease.versionIncrementer=incrementMajor \
          -Prelease.customUsername='Mythical Buildbot' \
          -Prelease.customPassword=${{ github.token }}
    - name: Release minor version
      if: (github.ref == 'refs/heads/develop' && contains(github.event.head_commit.message, '[MINOR]'))
      run: |
        # Fetch a full copy of the repo, as required by release plugin:
        git fetch --tags --unshallow
        ./gradlew release \
          -Prelease.versionIncrementer=incrementMinor \
          -Prelease.customUsername='Mythical Buildbot' \
          -Prelease.customPassword=${{ github.token }}
    - name: Release patch version
      if: (github.ref == 'refs/heads/develop' && !contains(github.event.head_commit.message, '[MAJOR]') && !contains(github.event.head_commit.message, '[MINOR]'))
      run: |
        # Fetch a full copy of the repo, as required by release plugin:
        git fetch --tags --unshallow
        ./gradlew release \
          -Prelease.versionIncrementer=incrementPatch \
          -Prelease.customUsername='Mythical Buildbot' \
          -Prelease.customPassword=${{ github.token }}

    - name: Publish with Gradle
      if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
      run: |
        ./gradlew publish

    - name: Bump to next snapshot version
      if: (github.ref == 'refs/heads/develop')
      run: |
        ./gradlew markNextVersion

    - name: Generate Proto Docs
      if: github.event_name == 'push'
      run: |
        ./gradlew generateProto -PprotoDocType=html -PprotoDocFile=index.html
        ./gradlew generateProto -PprotoDocType=markdown -PprotoDocFile=sdk.md

    - name: Checkin Proto Docs
      if: github.event_name == 'push'
      env:
        GITHUB_USER: 'Mythical Buildbot'
        GITHUB_TOKEN: ${{ github.token }}
      continue-on-error: true
      run: |
        mkdir -p doc/proto
        cp -v saga-sdk-proto/build/generated/source/proto/main/doc/* doc/proto
        git config user.name "Mythical Buildbot"
        git config user.email "buildbot@mythical.games"
        git add doc/proto/index.html
        git add doc/proto/sdk.md
        git commit -m "Updating docs"
        git push

    - name: Cleanup Gradle Cache
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties

    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took,message
        custom_payload: |
          {
            username: 'github-actions',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO} by ${process.env.AS_AUTHOR} finished in ${process.env.AS_TOOK}\nMessage: ${process.env.AS_MESSAGE}`,
            }]
          }
      env:
        GITHUB_TOKEN: ${{ github.token }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
